#!/bin/sh
#
# Description: AWS IoT Device Client start/stop script
#

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/egear
NAME="aws-iot-device-client"
DESC="AWS IoT Device Client"
DAEMON="/sbin/$NAME"
PIDFILE="/var/run/$NAME.pid"
STATFILE="/var/run/watchdog.$NAME"
UIDFILE="/var/persist/gwappd/gw_device_id.cfg"

ERR_NOERROR=0
ERR_PACKAGE_NOT_INSTALLED=3
ERR_DEVICE_UID_NOT_SET=4
ERR_INVALID_ARGUMENT=5

# Source init functions if they exist
if [ -f /etc/init.d/functions ]; then
    . /etc/init.d/functions
fi

# Exit if the package is not installed
if [ ! -x "$DAEMON" ]; then
    echo "${NAME} is not installed, cannot start ${NAME}"
    exit ${ERR_PACKAGE_NOT_INSTALLED}
fi

# Function that starts the daemon/service
do_start() {
    if [ ! -f "$UIDFILE" ]; then
        echo "Device UID is not set, cannot start ${NAME}"
        exit ${ERR_DEVICE_UID_NOT_SET}
    fi

    local status pid uid

    status=0
    pid=$(pidof "$NAME") || status=$?
    uid=$(hexdump -e '16/1 "%02x""\n"' "$UIDFILE")

    case $status in
    0)
        echo "$DESC already running ($pid)."
        exit ${ERR_NOERROR}
        ;;
    *)
        echo $(awk '{print int($1)}' /proc/uptime) > "$STATFILE"
        echo "Starting $DESC ..."
        start-stop-daemon -S -b -m -p "$PIDFILE" -n "$NAME" -a "$DAEMON" -- --config-file /etc/aws-iot-device-client.json --thing-name 6ul-"$uid" --fleet-provisioning-template-parameters "{\"UUID\":\"$uid\"}"
        ;;
    esac
}

# Function that stops the daemon/service
do_stop() {
    local pid status

    status=0
    pid=$(pidof "$NAME") || status=$?
    case $status in
    0)
        echo -n "Stopping $DESC ..."
        kill -s 15 "$pid" >/dev/null && rm -f "$PIDFILE" &&
            echo "Stopped $DESC ($pid)." || exit $?
        ;;
    *)
        echo "$DESC is not running; none killed." >&2
        ;;
    esac

    return $status
}

# Function that shows the daemon/service status
status_of_proc() {
    local pid status

    status=0
    pid=$(pidof "$NAME") || status=$?
    case $status in
    0)
        echo "$DESC is running ($pid)."
        exit ${ERR_NOERROR}
        ;;
    *)
        echo "$DESC is not running." >&2
        exit $status
        ;;
    esac
}

case "$1" in
start)
    do_start
    ;;
stop)
    do_stop || exit $?
    ;;
status)
    status_of_proc
    ;;
restart)
    do_stop
    do_start
    ;;
*)
    echo "Usage: $0 {start|stop|status|restart}" >&2
    exit ${ERR_INVALID_ARGUMENT}
    ;;
esac
